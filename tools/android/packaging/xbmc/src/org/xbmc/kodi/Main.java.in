package org.xbmc.@APP_NAME_LC@;

import android.app.NativeActivity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.graphics.PixelFormat;
import android.view.SurfaceHolder;
import android.view.Surface;
import org.xbmc.@APP_NAME_LC@.VideoPlayView;
import android.widget.FrameLayout;
import android.view.ViewGroup.LayoutParams;
import android.graphics.Color;
import android.os.Handler;
import android.os.Message;

public class Main extends NativeActivity 
{
  private VideoPlayView mVideoPlayView = null;
  private SurfaceHolder mSurfaceHolder = null;
  native void _onNewIntent(Intent intent);
  native void _SetVideoPlayViewHolder(SurfaceHolder holder);
  public native void _SetVideoPlaySurface(Surface surface);
  private FrameLayout rootView;
  private Handler mHandler = null;
  private final static int SHOWVIDEOVIEW =  0 ;
  private final static int DISMISSVIDEOVIEW =  1 ;
	private boolean mFromPause = false;
  
  public Main() 
  {
    super();
  }

  @Override
  public void onCreate(Bundle savedInstanceState) 
  {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_videoview);
    /*
    mVideoPlayView = (VideoPlayView)findViewById(R.id.VideoPlayView1);
    if (mVideoPlayView != null)
      mVideoPlayView.setSurfaceListener(this);
    */
    rootView = (FrameLayout)findViewById(R.id.root_view);  
    
    mFromPause = false;
    mHandler = new Handler()
    {
      @Override
      public void handleMessage(Message msg) {
        switch (msg.what) {
        case SHOWVIDEOVIEW:
          addVideoView();
          break;
        case DISMISSVIDEOVIEW:
          removeVideoView();
          break;
        default:
          break;
        }
      }
    };
  }

  @Override
  protected void onNewIntent(Intent intent)
  {
    super.onNewIntent(intent);
    try {
      _onNewIntent(intent);
    } catch (UnsatisfiedLinkError e) {
      Log.e("Main", "Native not registered");
    }
  }

  @Override
  public void onStart()
  {
    super.onStart();
    getWindow().setFormat(PixelFormat.TRANSPARENT);
  }

  @Override
  public void onResume()
  {
    super.onResume();

    if (android.os.Build.VERSION.SDK_INT >= 19) {
      // Immersive mode

      // Constants from API > 14
      final int API_SYSTEM_UI_FLAG_LAYOUT_STABLE = 0x00000100;
      final int API_SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION = 0x00000200;
      final int API_SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN = 0x00000400;
      final int API_SYSTEM_UI_FLAG_FULLSCREEN = 0x00000004;
      final int API_SYSTEM_UI_FLAG_IMMERSIVE_STICKY = 0x00001000;

      View thisView = getWindow().getDecorView();
      thisView.setSystemUiVisibility(
                API_SYSTEM_UI_FLAG_LAYOUT_STABLE
              | API_SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
              | API_SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN
              | View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
              | API_SYSTEM_UI_FLAG_FULLSCREEN
              | API_SYSTEM_UI_FLAG_IMMERSIVE_STICKY);
    }
    
    getWindow().setFormat(PixelFormat.TRANSLUCENT);
    /*
    mVideoPlayView = (VideoPlayView)findViewById(R.id.VideoPlayView1);
    Log.d("XBMC_MAIN", "mVideoPlayView = " + mVideoPlayView);
    mSurfaceHolder = mVideoPlayView.getHolder();
    Log.d("XBMC_MAIN", "mSurfaceHolder = " + mSurfaceHolder);
    //_SetVideoPlayViewHolder(mSurfaceHolder);
    _SetVideoPlaySurface(mSurfaceHolder.getSurface());
    Log.d("XBMC_MAIN", "VideoPlayView end");    
    */
    if (mFromPause) {
      removeVideoView();
      addVideoView();
      mFromPause = false;
    }  
    Log.d("XBMC_MAIN", "onResume");
  }
  
  @Override
  public void onPause()
  {
    super.onPause();
    mFromPause = true;    
    Log.d("XBMC_MAIN", "onPause");
  }
  
  @Override
  public void onDestroy()
  {
    Log.d("XBMC_MAIN", "onDestroy");
    //_SetVideoPlayViewHolder(null);
    //_SetVideoPlaySurface(null);
    //Log.d("XBMC_MAIN", "onDestroy 2 ");
    if (mVideoPlayView != null)
      mVideoPlayView.setSurfaceListener(null);
    super.onDestroy();
    mZidooPermissions.release();
  }
  
  public void CreateSurface()
  {
    Log.d("XBMC_MAIN", "CreateSurface enter");
    mHandler.removeMessages(SHOWVIDEOVIEW);
    mHandler.sendEmptyMessage(SHOWVIDEOVIEW);
    Log.d("XBMC_MAIN", "CreateSurface");
  }

  public void DeleteSurface()
  {
    Log.d("XBMC_MAIN", "DeleteSurface enter");
    _SetVideoPlaySurface(null);
    mHandler.removeMessages(DISMISSVIDEOVIEW);
    mHandler.sendEmptyMessage(DISMISSVIDEOVIEW);
    Log.d("XBMC_MAIN", "DeleteSurface");
  }
  
  private void addVideoView() {
    if (mVideoPlayView == null) {
      mVideoPlayView = new VideoPlayView(Main.this);
      if (mVideoPlayView != null) {
        mVideoPlayView.setSurfaceListener(Main.this);
        mVideoPlayView.setBackgroundColor(Color.TRANSPARENT);
        rootView.addView(mVideoPlayView, new LayoutParams(LayoutParams.WRAP_CONTENT,LayoutParams.WRAP_CONTENT));
      }
    }
  }
  
  private void removeVideoView() {
    if (mVideoPlayView != null) {
      if (mVideoPlayView.getSurface() != null)
        mVideoPlayView.getSurface().release();   
      rootView.removeView(mVideoPlayView);						
      mVideoPlayView = null;
    } else {
      Log.d("XBMC_MAIN", "DISMISSVIDEOVIEW videoview is null");
    }  
  }
  
}
